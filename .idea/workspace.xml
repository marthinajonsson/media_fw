<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true" buildAllGenerated="true">
    <generated>
      <config projectName="mediaFW" targetName="mediaFW" />
      <config projectName="mediaFW" targetName="gmock" />
      <config projectName="mediaFW" targetName="gtest" />
      <config projectName="mediaFW" targetName="apidoc" />
      <config projectName="mediaFW" targetName="gtest_main" />
      <config projectName="mediaFW" targetName="gmock_main" />
      <config projectName="mediaFW" targetName="apidoc_forced" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7133d6e3-7e54-4b4b-be78-e969829b104b" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeDoxyfile.in" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeDoxyfile.in" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeDoxygenDefaults.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeDoxygenDefaults.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeCCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeCCompiler.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeCXXCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeCXXCompiler.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeSystem.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CMakeSystem.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CompilerIdC/a.out" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CompilerIdC/a.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CompilerIdCXX/a.out" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/3.12.3/CompilerIdCXX/a.out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeError.log" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeError.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeRuleHashes.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/CMakeRuleHashes.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/apidoc.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/apidoc.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/apidoc_forced.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/apidoc_forced.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/check.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/check.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/feature_tests.bin" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/feature_tests.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/Cli.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/Cli.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/Client.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/Client.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/JsonParser.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/JsonParser.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/MediaHandler.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/MediaHandler.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/SshConnector.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/SshConnector.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/json/jsoncpp.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/json/jsoncpp.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/src/main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/test/test_main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/mediaFW.dir/test/test_main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/CMakeDirectoryInformation.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googlemock.dir/src/gmock-all.cc.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CMakeFiles/googletest.dir/src/gtest-all.cc.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/libgooglemock.a" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/contrib/googletest/libgoogletest.a" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/mediaFW" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/mediaFW" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/cmake-build-debug/mediaFW.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/cmake-build-debug/mediaFW.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeCache.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CMakeCCompiler.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CMakeCXXCompiler.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CMakeDetermineCompilerABI_C.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CMakeSystem.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CompilerIdC/CMakeCCompilerId.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CompilerIdC/a.out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/3.12.2/CompilerIdCXX/a.out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/clion-environment.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/cmake.check_cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/feature_tests.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/feature_tests.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/feature_tests.cxx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/CXX.includecache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/DependInfo.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/build.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/cmake_clean.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/cmake_clean_target.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/depend.internal" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/depend.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/flags.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/link.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/progress.make" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/googletest.dir/src/gtest-all.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/Project.cbp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/cmake_install.cmake" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/cmake-build-debug/libgoogletest.a" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/custom/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/custom/gmock-generated-actions.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/custom/gmock-generated-actions.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/custom/gmock-matchers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/custom/gmock-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-actions.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-cardinalities.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-actions.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-actions.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-function-mockers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-function-mockers.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-internal-utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-internal-utils.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-matchers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-matchers.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-nice-strict.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-generated-nice-strict.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-internal-utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-matchers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-more-actions.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-more-matchers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock-spec-builders.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/gmock.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/custom/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/custom/gmock-generated-actions.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/custom/gmock-generated-actions.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/custom/gmock-matchers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/custom/gmock-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/gmock-generated-internal-utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/gmock-generated-internal-utils.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/gmock-internal-utils.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gmock/internal/gmock-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-death-test.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-message.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-param-test.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-param-test.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-printers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-spi.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-test-part.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest-typed-test.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest_pred_impl.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/gtest_prod.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/custom/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/custom/gtest-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/custom/gtest-printers.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/custom/gtest.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-death-test-internal.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-filepath.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-internal.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-linked_ptr.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-param-util-generated.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-param-util-generated.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-param-util.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-port-arch.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-port.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-string.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-tuple.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-tuple.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-type-util.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/gtest/internal/gtest-type-util.h.pump" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock-all.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock-cardinalities.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock-internal-utils.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock-matchers.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock-spec-builders.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gmock_main.cc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-death-test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-death-test.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-filepath.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-filepath.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-internal-inl.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-internal-inl.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-port.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-port.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-printers.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-printers.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-test-part.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-test-part.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-typed-test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest-typed-test.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest.cc" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/data/config.json" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/data/config.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/Cli.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/Cli.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/JsonParser.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/JsonParser.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/MediaHandler.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/MediaHandler.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/Request.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/Request.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/SshConnector.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/SshConnector.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/Util.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/Util.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/database/Database.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/database/Database.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/database/DatabaseItem.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/database/DatabaseItem.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/database/MovieDatabase.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/database/MovieDatabase.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/database/SeriesDatabase.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/ifc/Parser.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/ifc/Parser.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/ssh/libssh2_config.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Cli.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Cli.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Json.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Json.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Observer.h" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Observer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/src/HttpConnector.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/src/HttpConnector.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/src/JsonParser.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/src/JsonParser.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/src/MediaHandler.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/src/MediaHandler.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mediaFW/src/SshConnector.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/mediaFW/src/SshConnector.cpp" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/mediaFW/cmake-build-debug/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FUSProjectUsageTrigger">
    <session id="490321337">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="30" />
          <entry key="project.open.time.12" value="1" />
          <entry key="project.open.time.14" value="2" />
          <entry key="project.open.time.15" value="1" />
          <entry key="project.open.time.16" value="1" />
          <entry key="project.open.time.17" value="1" />
          <entry key="project.open.time.18" value="4" />
          <entry key="project.open.time.19" value="5" />
          <entry key="project.open.time.20" value="3" />
          <entry key="project.open.time.23" value="2" />
          <entry key="project.open.time.24" value="1" />
          <entry key="project.open.time.25" value="2" />
          <entry key="project.open.time.27" value="1" />
          <entry key="project.open.time.28" value="3" />
          <entry key="project.open.time.30" value="1" />
          <entry key="project.open.time.33" value="1" />
          <entry key="project.open.time.36" value="2" />
          <entry key="project.open.time.41" value="1" />
          <entry key="project.open.time.9" value="1" />
          <entry key="project.opened" value="33" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="CliTest_Download3__Test (disassembly)" value="2" />
          <entry key="CliTest_Upload_Test (disassembly)" value="1" />
          <entry key="HttpTest (disassembly)" value="5" />
          <entry key="HttpTest_Search_Test (disassembly)" value="4" />
          <entry key="algorithm" value="2" />
          <entry key="cc" value="4" />
          <entry key="condition_variable" value="8" />
          <entry key="cpp" value="93" />
          <entry key="functional" value="1" />
          <entry key="future" value="2" />
          <entry key="h" value="270" />
          <entry key="hpp" value="1" />
          <entry key="json" value="27" />
          <entry key="mediaFW (disassembly)" value="3" />
          <entry key="mutex" value="1" />
          <entry key="thread" value="2" />
          <entry key="txt" value="9" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="CMakeLists.txt" value="7" />
          <entry key="Disassembly" value="15" />
          <entry key="JSON" value="27" />
          <entry key="ObjectiveC" value="384" />
          <entry key="PLAIN_TEXT" value="2" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="cpp" value="17539" />
          <entry key="h" value="37211" />
          <entry key="json" value="98" />
          <entry key="txt" value="215" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="CMakeLists.txt" value="215" />
          <entry key="Doxygen file" value="173" />
          <entry key="JSON" value="98" />
          <entry key="ObjectiveC" value="54577" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.cidr.testingFrameworks.usages">
        <counts>
          <entry key="Google Test" value="340" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FavoritesManager">
    <favorites_list name="mediaFW" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="CMakeLists.txt" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mediaFW/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="550">
              <caret line="25" column="34" lean-forward="true" selection-start-line="25" selection-start-column="34" selection-end-line="25" selection-end-column="34" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="JsonParser.h" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mediaFW/inc/JsonParser.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="132">
              <caret line="6" lean-forward="true" selection-start-line="6" selection-end-line="6" />
              <folding>
                <element signature="e#102#121#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="SshConnector.cpp" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mediaFW/src/SshConnector.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="154">
              <caret line="49" lean-forward="true" selection-start-line="49" selection-end-line="49" />
              <folding>
                <element signature="e#44#69#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="SshConnector.h" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mediaFW/inc/SshConnector.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="352">
              <caret line="26" column="34" selection-start-line="26" selection-start-column="34" selection-end-line="26" selection-end-column="34" />
              <folding>
                <element signature="e#150#176#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Test_Json.h" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Json.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-1174">
              <caret line="17" column="23" selection-start-line="17" selection-start-column="23" selection-end-line="17" selection-end-column="23" />
              <folding>
                <element signature="e#100#123#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Test_Cli.h" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Cli.h">
          <provider selected="true" editor-type-id="text-editor">
            <state>
              <folding>
                <element signature="e#124#148#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>spl</find>
      <find>split</find>
      <find>parseArg</find>
      <find>getMap</find>
      <find>find</find>
      <find>verifyExists</find>
      <find>setProperties</find>
      <find>m_items</find>
      <find>getConnectionInfo</find>
      <find>{ throw NotImplementedException(); }</find>
      <find>compilePayload</find>
      <find>m_saved</find>
      <find>jsonc</find>
      <find>ssh_get_server_publickey</find>
      <find>googlemock</find>
      <find>ssh_session_is_known_server</find>
      <find>ssh</find>
      <find>m_root</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/mediaFW/inc/JsonParser2.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/unittests/Test_Cli.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Status.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/ifc/CommandLineParser.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/InputObject.h" />
        <option value="$PROJECT_DIR$/mediaFW/data/db.json" />
        <option value="$PROJECT_DIR$/mediaFW/inc/ifc/Observer.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/StatusLogger.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/database/SeriesDatabase.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Database.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/Cli.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Client.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/Client.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Connection.h" />
        <option value="$PROJECT_DIR$/mediaFW/data/package.json" />
        <option value="$PROJECT_DIR$/mediaFW/inc/ConfigParser.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/ConfigParser.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/test/test_main.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/inc/ifc/Logger.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/main.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/data/config.json" />
        <option value="$PROJECT_DIR$/mediaFW/inc/unittests/Test_HttpConnector.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/HttpConnector.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/database/MovieDatabase.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/database/Database.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Util.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Json.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Cli.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Request.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/unittests/Test_Observer.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/Cli.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/database/DatabaseItem.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/MediaHandler.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/MediaHandler.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/src/HttpConnector.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/inc/ifc/Parser.h" />
        <option value="$PROJECT_DIR$/mediaFW/inc/JsonParser.h" />
        <option value="$PROJECT_DIR$/mediaFW/src/JsonParser.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/src/SshConnector.cpp" />
        <option value="$PROJECT_DIR$/mediaFW/inc/SshConnector.h" />
        <option value="$PROJECT_DIR$/mediaFW/CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths />
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="y" value="118" />
    <option name="width" value="1819" />
    <option name="height" value="786" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="mediaFW" type="b2602c69:ProjectViewProjectNode" />
              <item name="media_fw" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mediaFW" type="b2602c69:ProjectViewProjectNode" />
              <item name="media_fw" type="462c0819:PsiDirectoryNode" />
              <item name="mediaFW" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mediaFW" type="b2602c69:ProjectViewProjectNode" />
              <item name="media_fw" type="462c0819:PsiDirectoryNode" />
              <item name="mediaFW" type="462c0819:PsiDirectoryNode" />
              <item name="inc" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mediaFW" type="b2602c69:ProjectViewProjectNode" />
              <item name="media_fw" type="462c0819:PsiDirectoryNode" />
              <item name="mediaFW" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="CMakeSettings" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.mediaFW">
    <configuration name="HttpTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" TEST_CLASS="HttpTest" TEST_MODE="SUITE_TEST" />
    <configuration name="HttpTest.HttpTest_Delete_Test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" TEST_CLASS="HttpTest" TEST_METHOD="HttpTest_Delete_Test" TEST_MODE="SUITE_TEST" />
    <configuration name="HttpTest.HttpTest_Download_Test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" TEST_CLASS="HttpTest" TEST_METHOD="HttpTest_Download_Test" TEST_MODE="SUITE_TEST" />
    <configuration name="HttpTest.HttpTest_Search2_Test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" TEST_CLASS="HttpTest" TEST_METHOD="HttpTest_Search2_Test" TEST_MODE="SUITE_TEST" />
    <configuration name="HttpTest.HttpTest_Search_Test" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" TEST_CLASS="HttpTest" TEST_METHOD="HttpTest_Search_Test" TEST_MODE="SUITE_TEST" />
    <configuration name="Build All" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" EXPLICIT_BUILD_TARGET_NAME="all" />
    <configuration name="apidoc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="apidoc" CONFIG_NAME="Debug" />
    <configuration name="apidoc_forced" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="apidoc_forced" CONFIG_NAME="Debug" />
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="gmock" CONFIG_NAME="Debug" />
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="gmock_main" CONFIG_NAME="Debug" />
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="gtest" CONFIG_NAME="Debug" />
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="gtest_main" CONFIG_NAME="Debug" />
    <configuration name="mediaFW" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="mediaFW" TARGET_NAME="mediaFW" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="mediaFW" RUN_TARGET_NAME="mediaFW" />
    <list>
      <item itemvalue="Application.Build All" />
      <item itemvalue="Application.apidoc" />
      <item itemvalue="Application.apidoc_forced" />
      <item itemvalue="Application.mediaFW" />
      <item itemvalue="Application.gmock" />
      <item itemvalue="Application.gmock_main" />
      <item itemvalue="Application.gtest" />
      <item itemvalue="Application.gtest_main" />
      <item itemvalue="Google Test.HttpTest" />
      <item itemvalue="Google Test.HttpTest.HttpTest_Search_Test" />
      <item itemvalue="Google Test.HttpTest.HttpTest_Search2_Test" />
      <item itemvalue="Google Test.HttpTest.HttpTest_Download_Test" />
      <item itemvalue="Google Test.HttpTest.HttpTest_Delete_Test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Google Test.HttpTest" />
        <item itemvalue="Google Test.HttpTest.HttpTest_Delete_Test" />
        <item itemvalue="Google Test.HttpTest.HttpTest_Download_Test" />
        <item itemvalue="Google Test.HttpTest.HttpTest_Search2_Test" />
        <item itemvalue="Google Test.HttpTest.HttpTest_Search_Test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7133d6e3-7e54-4b4b-be78-e969829b104b" name="Default Changelist" comment="" />
      <created>1541244973437</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1541244973437</updated>
      <workItem from="1541244977824" duration="689000" />
      <workItem from="1541246573103" duration="214000" />
      <workItem from="1541247061110" duration="255000" />
      <workItem from="1541247974262" duration="17000" />
      <workItem from="1541248127319" duration="22000" />
      <workItem from="1541248258376" duration="27000" />
      <workItem from="1541264519986" duration="264000" />
      <workItem from="1541265093782" duration="10257000" />
      <workItem from="1541360273226" duration="3274000" />
      <workItem from="1541437212374" duration="1051000" />
      <workItem from="1541445187448" duration="7655000" />
      <workItem from="1541494302215" duration="2861000" />
      <workItem from="1541504433522" duration="1260000" />
      <workItem from="1541525749958" duration="7109000" />
      <workItem from="1541533613903" duration="2549000" />
      <workItem from="1541581097199" duration="10919000" />
      <workItem from="1541603053180" duration="1494000" />
      <workItem from="1541663687446" duration="10000" />
      <workItem from="1541663963013" duration="9110000" />
      <workItem from="1541680130947" duration="8524000" />
      <workItem from="1541753447531" duration="9937000" />
      <workItem from="1541790446563" duration="11107000" />
      <workItem from="1541851921316" duration="6698000" />
      <workItem from="1541868015053" duration="12067000" />
      <workItem from="1541939398472" duration="12013000" />
      <workItem from="1542010947033" duration="10832000" />
      <workItem from="1542101213197" duration="755000" />
      <workItem from="1542104381684" duration="4232000" />
      <workItem from="1542184813855" duration="1616000" />
      <workItem from="1542197321554" duration="11884000" />
      <workItem from="1542356508749" duration="17340000" />
      <workItem from="1542390348938" duration="963000" />
      <workItem from="1542391666343" duration="4803000" />
      <workItem from="1542466205449" duration="12831000" />
      <workItem from="1542483138397" duration="2862000" />
      <workItem from="1542486021188" duration="1521000" />
      <workItem from="1542556111630" duration="1776000" />
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="HttpTest_HttpTest_Download_Test - 2018.11.16 at 19h 11m 31s.xml">
      <configuration name="HttpTest.HttpTest_Download_Test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest_HttpTest_Download_Test - 2018.11.16 at 19h 12m 01s.xml">
      <configuration name="HttpTest.HttpTest_Download_Test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest_HttpTest_Download_Test - 2018.11.16 at 19h 12m 13s.xml">
      <configuration name="HttpTest.HttpTest_Download_Test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 16m 10s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 20m 37s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest_HttpTest_Delete_Test - 2018.11.16 at 19h 22m 20s.xml">
      <configuration name="HttpTest.HttpTest_Delete_Test" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 22m 47s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 25m 00s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 25m 43s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
    <history-entry file="HttpTest - 2018.11.16 at 19h 26m 35s.xml">
      <configuration name="HttpTest" configurationId="CMakeGoogleTestRunConfigurationType" />
    </history-entry>
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="190798000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="32" width="1920" height="1048" extended-state="6" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" sideWeight="0.49403748" visible="true" weight="0.16666667" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32951945" />
      <window_info anchor="bottom" id="Messages" order="12" sideWeight="0.49804142" visible="true" weight="0.32745314" />
      <window_info anchor="bottom" id="CMake" order="11" weight="0.34178612" />
      <window_info anchor="right" id="LuaJ" order="3" />
      <window_info anchor="bottom" id="Event Log" order="9" sideWeight="0.501399" side_tool="true" weight="0.3340961" />
      <window_info anchor="bottom" id="Version Control" order="10" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.49860102" weight="0.3340961" />
      <window_info id="Structure" order="1" sideWeight="0.50687283" side_tool="true" weight="0.22719643" />
      <window_info anchor="bottom" id="Terminal" order="8" sideWeight="0.49860102" weight="0.32951945" />
      <window_info id="Favorites" order="2" sideWeight="0.50596255" side_tool="true" weight="0.23614997" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39816934" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="right" id="Database" order="3" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32855567" />
    </layout>
    <layout-to-restore>
      <window_info anchor="bottom" id="CMake" order="11" weight="0.33867276" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info content_ui="combo" id="Project" order="0" sideWeight="0.49403748" visible="true" weight="0.25517628" />
      <window_info id="Structure" order="1" sideWeight="0.50687283" side_tool="true" weight="0.22719643" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32951945" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.49860102" weight="0.3340961" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32951945" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39816934" />
      <window_info anchor="right" id="Database" order="3" />
      <window_info anchor="bottom" id="Terminal" order="8" sideWeight="0.49860102" weight="0.32951945" />
      <window_info anchor="bottom" id="Event Log" order="9" sideWeight="0.501399" side_tool="true" weight="0.3340961" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="10" show_stripe_button="false" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info active="true" anchor="bottom" id="Messages" order="12" sideWeight="0.49804142" visible="true" weight="0.32837528" />
      <window_info id="Favorites" order="2" sideWeight="0.50596255" weight="0.23614997" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/mediaFW/inc/Connection.h</url>
          <line>7</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/mediaFW/inc/JsonParser.h</url>
          <line>95</line>
        </line-breakpoint>
      </breakpoints>
      <option name="time" value="2" />
    </breakpoint-manager>
    <watches-manager>
      <configuration name="CMakeRunConfiguration">
        <watch expression="request.category" />
      </configuration>
    </watches-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mediaFW/data/package.json" />
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/ConfigParser.h" />
    <entry file="file://$PROJECT_DIR$/mediaFW/src/ConfigParser.cpp" />
    <entry file="file://$PROJECT_DIR$/mediaFW/data/db.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="2" column="5" selection-start-line="2" selection-start-column="4" selection-end-line="2" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/8/algorithm">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="318">
          <caret line="59" selection-start-line="59" selection-end-line="59" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/8/bits/stl_iterator_base_funcs.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="201">
          <caret line="137" column="4" selection-start-line="137" selection-start-column="4" selection-end-line="137" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/Connection.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="326">
          <caret line="49" selection-start-line="49" selection-end-line="49" />
          <folding>
            <element signature="e#101#120#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/StatusLogger.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="225">
          <caret line="15" column="23" selection-start-line="15" selection-start-column="23" selection-end-line="15" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/Client.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="344">
          <caret line="82" column="35" selection-start-line="82" selection-start-column="35" selection-end-line="82" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/test/test_main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" column="1" selection-start-line="13" selection-start-column="1" selection-end-line="13" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/ifc/Logger.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="18" column="59" selection-start-line="18" selection-start-column="59" selection-end-line="18" selection-end-column="59" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/unistd.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="331">
          <caret line="289" column="11" selection-start-line="289" selection-start-column="11" selection-end-line="289" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/8/bits/stl_map.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="406">
          <caret line="505" selection-start-line="505" selection-end-line="505" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/8/bits/basic_string.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="927" selection-start-line="927" selection-end-line="927" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/contrib/googletest/src/gtest.cc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="188">
          <caret line="2444" selection-start-line="2444" selection-end-line="2444" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/HttpConnector.h" />
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/ifc/Observer.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="355">
          <caret line="24" selection-start-line="24" selection-end-line="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/Cli.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-612">
          <caret line="9" selection-start-line="9" selection-end-line="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/database/Database.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="80" column="10" selection-start-line="80" selection-start-column="10" selection-end-line="80" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/Request.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1496">
          <caret line="7" column="14" lean-forward="true" selection-start-line="7" selection-start-column="14" selection-end-line="7" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Observer.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="42" column="2" selection-start-line="42" selection-start-column="2" selection-end-line="42" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Logger.h">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_HttpConnector.h">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Database.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1452">
          <caret line="66" column="19" selection-start-line="66" selection-start-column="19" selection-end-line="66" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/data/config.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/Util.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="234">
          <caret line="108" column="14" selection-start-line="108" selection-start-column="5" selection-end-line="108" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/Cli.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="436">
          <caret line="336" column="30" selection-start-line="336" selection-start-column="30" selection-end-line="336" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/database/SeriesDatabase.h" />
    <entry file="file://$PROJECT_DIR$/mediaFW/src/json/jsoncpp.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="132">
          <caret line="75" column="18" selection-start-line="75" selection-start-column="15" selection-end-line="75" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/database/DatabaseItem.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="16" column="6" selection-start-line="16" selection-start-column="6" selection-end-line="16" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/database/MovieDatabase.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="218">
          <caret line="69" column="59" selection-start-line="69" selection-start-column="59" selection-end-line="69" selection-end-column="59" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/HttpConnector.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1488">
          <caret line="96" column="1" selection-start-line="96" selection-start-column="1" selection-end-line="96" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/MediaHandler.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="352">
          <caret line="18" column="40" selection-start-line="18" selection-start-column="40" selection-end-line="18" selection-end-column="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/ifc/Parser.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="154">
          <caret line="7" column="17" selection-start-line="7" selection-start-column="17" selection-end-line="7" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/MediaHandler.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="740">
          <caret line="102" column="36" lean-forward="true" selection-start-line="102" selection-start-column="36" selection-end-line="102" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-338">
          <caret line="1" selection-start-line="1" selection-end-line="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Cli.h">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <folding>
            <element signature="e#124#148#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/contrib/CMakeCache.txt" />
    <entry file="file://$PROJECT_DIR$/mediaFW/contrib/Makefile" />
    <entry file="file://$PROJECT_DIR$/mediaFW/contrib/googletest/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="22">
          <caret line="1" column="40" lean-forward="true" selection-start-line="1" selection-start-column="40" selection-end-line="1" selection-end-column="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/contrib/googlemock/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="188">
          <caret line="39" selection-start-line="39" selection-end-line="39" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/ssh/libssh2_config.h" />
    <entry file="file:///usr/include/libssh/libssh.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="12628">
          <caret line="574" column="10" selection-start-line="574" selection-end-line="574" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/libssh/priv.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="92">
          <caret line="39" column="29" lean-forward="true" selection-start-line="39" selection-start-column="29" selection-end-line="39" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/SshConnector.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="352">
          <caret line="26" column="34" selection-start-line="26" selection-start-column="34" selection-end-line="26" selection-end-column="34" />
          <folding>
            <element signature="e#150#176#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/unittests/Test_Json.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1174">
          <caret line="17" column="23" selection-start-line="17" selection-start-column="23" selection-end-line="17" selection-end-column="23" />
          <folding>
            <element signature="e#100#123#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="550">
          <caret line="25" column="34" lean-forward="true" selection-start-line="25" selection-start-column="34" selection-end-line="25" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/JsonParser.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="36" column="29" lean-forward="true" selection-start-line="36" selection-start-column="29" selection-end-line="36" selection-end-column="29" />
          <folding>
            <element signature="e#46#63#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/inc/JsonParser.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="132">
          <caret line="6" lean-forward="true" selection-start-line="6" selection-end-line="6" />
          <folding>
            <element signature="e#102#121#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mediaFW/src/SshConnector.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="154">
          <caret line="49" lean-forward="true" selection-start-line="49" selection-end-line="49" />
          <folding>
            <element signature="e#44#69#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>