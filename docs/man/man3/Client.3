.TH "Client" 3 "Tue Nov 13 2018" "mediaFW" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Client \- Class implementing the functionality of a client\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBSubject\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBClient\fP (\fBConnection\fP *_conn, \fBCli\fP *_cli)"
.br
.ti -1c
.RI "bool \fBgetConnectionStatus\fP ()"
.br
.ti -1c
.RI "bool \fBisRequestInQueue\fP ()"
.br
.ti -1c
.RI "void \fBhandleRequestThread\fP (std::promise< int > *)"
.br
.RI "when available pop requests from queue and process them\&. "
.ti -1c
.RI "void \fBhandleCliThread\fP (std::promise< int > *)"
.br
.RI "loop that receives new Requests from CLI and pushes to queue "
.ti -1c
.RI "void \fBpushRequest\fP (const \fBRequest\fP &m_request)"
.br
.ti -1c
.RI "\fBRequest\fP \fBpopRequest\fP ()"
.br
.ti -1c
.RI "void \fBregisterObserver\fP (\fBObserver\fP *observer) override"
.br
.RI "register observers for event notification "
.ti -1c
.RI "void \fBremoveObserver\fP (\fBObserver\fP *observer) override"
.br
.RI "remove observer for event notification "
.ti -1c
.RI "void \fBnotifyObservers\fP (\fBRequest\fP &request) override"
.br
.RI "notify all observers for event "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBObserver\fP * > \fBobservers\fP"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static \fBRequest\fP \fBgetCliInput\fP (\fBCli\fP *p_cli)"
.br
.RI "A method that waits for CLI to process incoming request\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_queueEmpty\fP"
.br
.ti -1c
.RI "\fBCli\fP * \fBp_cli\fP"
.br
.ti -1c
.RI "\fBConnection\fP * \fBp_conn\fP"
.br
.ti -1c
.RI "\fBStatusLogger\fP * \fBm_logger\fP"
.br
.ti -1c
.RI "std::mutex \fBm_lock\fP"
.br
.ti -1c
.RI "std::queue< \fBRequest\fP > \fBm_requests\fP"
.br
.ti -1c
.RI "std::condition_variable \fBm_condVar\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class implementing the functionality of a client\&. 

Receives and interpretes information from stdin and sends requests to the server\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBRequest\fP Client::getCliInput (\fBCli\fP * p_cli)\fC [static]\fP, \fC [private]\fP"

.PP
A method that waits for CLI to process incoming request\&. \fBClient::getCliInput(Cli* p_cli)\fP 
.PP
\fBParameters:\fP
.RS 4
\fIp_cli\fP - pointer to CLI instance 
.RE
.PP
\fBReturns:\fP
.RS 4
- A request object 
.RE
.PP

.SS "void Client::handleCliThread (std::promise< int > * exit2)"

.PP
loop that receives new Requests from CLI and pushes to queue handleCliThread 
.PP
\fBReturns:\fP
.RS 4
RET::OK when CLI is exiting 
.RE
.PP

.SS "void Client::handleRequestThread (std::promise< int > * exit)"

.PP
when available pop requests from queue and process them\&. handleRequestThread 
.PP
\fBReturns:\fP
.RS 4
RET::OK when CLI is exiting 
.RE
.PP

.SS "void Client::notifyObservers (\fBRequest\fP & request)\fC [override]\fP, \fC [virtual]\fP"

.PP
notify all observers for event notifyObservers interface
.PP
\fBParameters:\fP
.RS 4
\fIrequest\fP to send to all observers 
.RE
.PP

.PP
Implements \fBSubject\fP\&.
.SS "void Client::registerObserver (\fBObserver\fP * observer)\fC [override]\fP, \fC [virtual]\fP"

.PP
register observers for event notification registerObserver interface
.PP
\fBParameters:\fP
.RS 4
\fIobserver\fP 
.RE
.PP

.PP
Implements \fBSubject\fP\&.
.SS "void Client::removeObserver (\fBObserver\fP * observer)\fC [override]\fP, \fC [virtual]\fP"

.PP
remove observer for event notification removeObserver interface
.PP
\fBParameters:\fP
.RS 4
\fIobserver\fP 
.RE
.PP

.PP
Implements \fBSubject\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mediaFW from the source code\&.
