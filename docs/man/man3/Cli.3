.TH "Cli" 3 "Tue Nov 13 2018" "mediaFW" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Cli \- Module handling everything related to our Command line interface\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'inc/Cli\&.h'\fP
.PP
Inherits \fBCommandLineParser\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRequest\fP \fBprocess\fP () override"
.br
.RI "Public method processing input from stdin\&. . "
.ti -1c
.RI "\fBRequest\fP \fBinterprete\fP (std::vector< std::string > &) override"
.br
.RI "translate incoming user request and save in request object "
.ti -1c
.RI "\fBRequest\fP \fBprocess\fP (std::string &) override"
.br
.RI "Public method processing input from stdin\&. "
.ti -1c
.RI "void \fBverifyUploadTest\fP (\fBRequest\fP &request, std::vector< std::string > &i)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBsplit\fP (std::string &input, char delim)"
.br
.ti -1c
.RI "int \fBcheckValidEvent\fP (std::vector< std::string > &input, Event &event)"
.br
.ti -1c
.RI "int \fBcheckValidCategory\fP (std::vector< std::string > &input, Category &category)"
.br
.ti -1c
.RI "int \fBcheckValidType\fP (\fBRequest\fP &request, std::string &type)"
.br
.ti -1c
.RI "int \fBverifyObjectExists\fP (Category &category, const std::string &value)"
.br
.ti -1c
.RI "int \fBgetTypeOfValue\fP (std::vector< std::string > &input, std::string &type)"
.br
.ti -1c
.RI "int \fBgetValueOfType\fP (std::vector< std::string > &input, std::string &val)"
.br
.ti -1c
.RI "void \fBsetFileName\fP (\fBRequest\fP &request, std::string &val)"
.br
.ti -1c
.RI "void \fBsetProperties\fP (\fBRequest\fP &request, std::vector< std::string > &item)"
.br
.ti -1c
.RI "int \fBverifyUpload\fP (\fBRequest\fP &request)"
.br
.ti -1c
.RI "void \fBprintOptions\fP ()"
.br
.RI "Test A private method that prints all valid options for stdin\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const std::string \fBTITLE\fP = 'title'"
.br
.ti -1c
.RI "const std::string \fBGENRE\fP = 'genre'"
.br
.ti -1c
.RI "const std::string \fBACTOR\fP = 'actor'"
.br
.ti -1c
.RI "const std::string \fBDIRECTOR\fP = 'director'"
.br
.ti -1c
.RI "const std::string \fBFILENAME\fP = 'filename'"
.br
.ti -1c
.RI "std::string \fBMOVIE\fP = 'movie'"
.br
.ti -1c
.RI "std::string \fBSERIES\fP = 'series'"
.br
.ti -1c
.RI "const std::string \fBDOWNLOAD\fP = 'download'"
.br
.ti -1c
.RI "const std::string \fBUPLOAD\fP = 'upload'"
.br
.ti -1c
.RI "const std::string \fBSEARCH\fP = 'search'"
.br
.ti -1c
.RI "const std::string \fBDELETE\fP = 'delete'"
.br
.ti -1c
.RI "const std::string \fBHELP\fP = 'help'"
.br
.ti -1c
.RI "const std::string \fBEXIT\fP = 'exit'"
.br
.ti -1c
.RI "const std::vector< std::string > \fBEVENT_ARGS\fP = {UPLOAD, DOWNLOAD, SEARCH, DELETE, HELP, EXIT}"
.br
.in -1c
.SH "Detailed Description"
.PP 
Module handling everything related to our Command line interface\&. 

Class implementing the functionality of a command line interface\&.
.PP
Receives inputs from STDIN and splits the result into strings\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBRequest\fP Cli::interprete (std::vector< std::string > & input)\fC [override]\fP, \fC [virtual]\fP"

.PP
translate incoming user request and save in request object Client::interprete interface of \fBCommandLineParser\fP 
.PP
\fBParameters:\fP
.RS 4
\fIstd::vector<std::string>&\fP vector of string arguments to be translated 
.RE
.PP
\fBReturns:\fP
.RS 4
the translated request object 
.RE
.PP

.PP
Implements \fBCommandLineParser\fP\&.
.SS "void Cli::printOptions ()\fC [inline]\fP, \fC [private]\fP"

.PP
Test A private method that prints all valid options for stdin\&. \fBCli::printOptions\fP 
.SS "\fBRequest\fP Cli::process ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Public method processing input from stdin\&. . Client::process() interface of \fBCommandLineParser\fP 
.PP
\fBReturns:\fP
.RS 4
Vector of strings containing output from stdin\&. 
.RE
.PP

.PP
Implements \fBCommandLineParser\fP\&.
.SS "\fBRequest\fP Cli::process (std::string & line)\fC [override]\fP, \fC [virtual]\fP"

.PP
Public method processing input from stdin\&. Client::process() interface of \fBCommandLineParser\fP 
.PP
\fBParameters:\fP
.RS 4
\fIstd::string&\fP fixed string used for unit testing mocking stdin 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of strings containing output from stdin\&. 
.RE
.PP

.PP
Implements \fBCommandLineParser\fP\&.
.SS "std::vector<std::string> Cli::split (std::string & input, char delim)\fC [inline]\fP, \fC [private]\fP"
\fBCli::split\fP
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP incoming unprocessed string 
.br
\fIdelim\fP delimiter used to split 
.br
\fIinput\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP splitted into multiple strings saved in a std::vector 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mediaFW from the source code\&.
